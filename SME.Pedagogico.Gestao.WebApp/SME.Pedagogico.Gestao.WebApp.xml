<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SME.Pedagogico.Gestao.WebApp</name>
    </assembly>
    <members>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,SME.Pedagogico.Gestao.WebApp.Contexts.SMEManagementContext)">
            <summary>
            Construtor padrão para o AuthController, faz injeção de dependências de IConfiguration e SMEManagementContext.
            </summary>
            <param name="config">Depêndencia de configurações</param>
            <param name="db">Depêndencia de dataContext (SMEManagementContext)</param>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.Authenticate(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para validar as credenciais de login do usuário.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário</param>
            <returns>Objeto contendo informações do usuário encontrado, caso não seja encontrado nenhum usuário com correspondente a credencial enviada o método retorna nulo.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.CreateToken(SME.Pedagogico.Gestao.WebApp.Models.Auth.ClientUserModel)">
            <summary>
            Método para gerar o token de acesso.
            </summary>
            <param name="user">Objeto contendo informações do usuário</param>
            <returns>Token gerado à partir das informações do usuário.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.CreateToken(System.String)">
            <summary>
            Método para gerar o token de acesso.
            </summary>
            <param name="username">Nome do usuário</param>
            <returns>Token gerado à partir das informações do usuário.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.GetUser(System.String)">
            <summary>
            Método para encontrar um usuário pelo username. Não está implementado corretamente ainda.
            </summary>
            <param name="username">Nome de usuário a ser retornado</param>
            <returns>Usuário com o username especificado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.ExtractDataByName(System.String,System.String)">
            <summary>
            Método para extrair atributos de uma página html (raw) pela propriedade 'name'. Só funciona se a propriedade 'name' estiver antes do 'value'.
            </summary>
            <param name="source">Fonte do html (raw)</param>
            <param name="name">Nome do atributo desejado</param>
            <returns>Valor (value) do atributo desejado</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.GetUserRoles(System.String)">
            <summary>
            Método para retornar as funções/cargos/perfis do usuário pelo 'username'
            </summary>
            <param name="username">Nome de usuário a ser pesquisado</param>
            <returns>Retorna uma lista de UserRoleModel</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.Login(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para efetuar o login do usuário utilizando o sistema do Novo SGP para validar o usuário e receber credencial de acesso.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e password</param>
            <returns>Token, Sessão e RefreshToken gerado à partir das informações do usuário encontrado, caso não seja encontrado nenhum usuário correspondente à credencial, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.RefreshLoginJWT(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para renovar o token através do refresh token e nome de usuário.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e refreshToken</param>
            <returns>Token e RefreshToken gerado à partir do RefreshToken utilizado, caso o RefreshToken não seja válido, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.Logout(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para deslogar o usuário.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e session</param>
            <returns>Retorna verdadeiro caso o usuário estiver logado com as credenciais especificadas, caso contrário retorna falso.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.LoginIdentity(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para fazer login do usuário utilizando o sistema http://identity.sme.prefeitura.sp.gov.br.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username e password</param>
            <returns>Informações sobre o usuário que está tentando logar (tokens de acesso e cookies), caso não seja encontrado nenhum usuário correspondente à credencial, o método retorna usuário não autorizado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.AuthController.LogoutIdentity(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para fazer o logout utilizando o sistema http://identity.sme.prefeitura.sp.gov.br.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário, neste caso específico é necessário o atributo username</param>
            <returns>Sucesso (status code 200) caso seja possível deslogar o usuário desejado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.ClassRoomStudentsController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,SME.Pedagogico.Gestao.WebApp.Contexts.SMEManagementContext)">
            <summary>
            Construtor padrão para o ClassRoomStudents, faz injeção de dependências de IConfiguration e SMEManagementContext.
            </summary>
            <param name="config">Depêndencia de configurações</param>
            <param name="db">Depêndencia de dataContext (SMEManagementContext)</param>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.IntegracaoAPIController.Authenticate(SME.Pedagogico.Gestao.WebApp.Models.Auth.CredentialModel)">
            <summary>
            Método para validar as credenciais de login do usuário.
            </summary>
            <param name="credential">Objeto que contém informações da credencial do usuário</param>
            <returns>Objeto contendo informações do usuário encontrado, caso não seja encontrado nenhum usuário com correspondente a credencial enviada o método retorna nulo.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.IntegracaoAPIController.GetUser(System.String)">
            <summary>
            Método para encontrar um usuário pelo username. Não está implementado corretamente ainda.
            </summary>
            <param name="username">Nome de usuário a ser retornado</param>
            <returns>Usuário com o username especificado.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.IntegracaoAPIController.CreateToken(SME.Pedagogico.Gestao.WebApp.Models.Auth.ClientUserModel)">
            <summary>
            Método para gerar o token de acesso.
            </summary>
            <param name="user">Objeto contendo informações do usuário</param>
            <returns>Token gerado à partir das informações do usuário.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.IntegracaoAPIController.CreateToken(System.String)">
            <summary>
            Método para gerar o token de acesso.
            </summary>
            <param name="username">Nome do usuário</param>
            <returns>Token gerado à partir das informações do usuário.</returns>
        </member>
        <member name="M:SME.Pedagogico.Gestao.WebApp.Controllers.IntegracaoAPIController.ExtractDataByName(System.String,System.String)">
            <summary>
            Método para extrair atributos de uma página html (raw) pela propriedade 'name'. Só funciona se a propriedade 'name' estiver antes do 'value'.
            </summary>
            <param name="source">Fonte do html (raw)</param>
            <param name="name">Nome do atributo desejado</param>
            <returns>Valor (value) do atributo desejado</returns>
        </member>
    </members>
</doc>
