// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190603213644_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "cc670f56-9722-4453-b107-b0ac019a4b44",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "8d311666-bcd7-4203-9f3f-95e220dac89c",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "2844e8ee-6f29-4df6-980c-e9cfeef24514",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "7e8a92dd-8fbb-4f02-92b4-3384d78edc72",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "254fa1a6-1b1b-48f6-a654-ba3488a68c73",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "12ce957d-eda4-4b5d-af20-199cb7341b21",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "e8117793-13c0-4d92-bff7-a84c13474e9f",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "ae350e3d-bad0-4c77-84cb-c575069c3adc",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "7d3a6fd9-3c24-4925-aa4e-bb528af870d9",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "02f53e04-c4ab-42c8-9409-6ed93caddb50",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "f5fd8d6c-3148-403c-bab8-20c0e3ca42f5",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "a58d824d-a677-4607-b916-49ff3121a3f7",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "cf11396a-6454-492a-ba10-f6d88aa210f5",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "fd434a4a-e5c0-46d4-9423-7b9a7f4aea47",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "4e017c7b-17b8-499f-a6ad-1363eccc6f49",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "92c7e65c-707a-4537-b804-54f844318031",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "92b3ee01-836f-477e-b3bd-bd4004b27381",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "79d926f1-8b19-48e3-98e4-958faefd9981",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "9731104f-08f2-4ecf-b873-f0fab45bf1d0",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "0890bc18-f866-413a-9b4c-483de7376354",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "b97d6716-87df-4fae-a1c5-337a41b8fff2",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "fe9c37a2-ceaf-467f-a4cb-96a03cf358b9",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "a35b9132-1280-4370-8f7f-6643c51b47e7",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "4d847cbf-d7b7-4c26-a130-819a0cbe853b",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "c1e63f90-3f08-4556-83ca-75ef0af98f47",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "54674e7c-4bf6-4ae9-9e50-5e51cdf7982a",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "f3ea1eb4-c476-48cd-a02e-748443998e35",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "afb5eb24-e8c2-4fc0-a8f8-929a0b7495ef",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "5534fc66-3f69-4946-8943-17bf8d577fd6",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "6940b051-46f2-43eb-ad48-8c88fafd38ac",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "84ced6dd-1dcb-4daa-8cdf-47855b246fce",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "0bc8c695-e1f3-4c00-9f40-757a74239864",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "970a069f-5931-4a54-af81-d03712260b68",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "1c9ea943-3e4d-467f-9608-d2a4b3f74bd8",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "9e25ef45-5709-4564-b0e1-dd5a5ac7fff9",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "58813715-d6da-4f52-9a83-c734adee07d3",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "807c014c-bb6f-43ff-ac1e-971825630e3b",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "30335a06-f75c-4f5f-8098-b357bc83a251",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "6f9a3174-7188-4037-8590-12b836b8356f",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "5eba0f0f-ca28-4c7d-abc3-a6a227087e15",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "929e688f-89df-4c69-8d00-724bfad19701",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "71de3c6f-e973-4c76-be61-de91c255755f",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "e253650f-dae2-4be5-865c-6cdeb44ddff6",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "8487d899-c909-4562-91db-3843a85ae0be",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "57b1f87c-a51c-43d6-83ff-7160c8ec35d7",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "b351dee1-a045-4231-8cf9-38d37a4280dd",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "5d4c63c0-abe7-4a4f-b2ac-7aaea0a1d0df",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "f7c51a77-e930-4cb7-8935-c7bc1adccf35",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "aa7f082d-23a1-40f7-b061-004b3e231bc8",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "35e4d3c2-73fa-404b-812a-48bd00e8f76d",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "010a719d-552b-4b22-b170-3f06165ed751",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "e031cb05-375b-463b-83bb-831ba1f45834",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "4cd8d262-cfe4-410a-a6ee-bbecfe8fb413",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "d5ddb15e-e156-402b-8a22-4c2e6bab2db2",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
