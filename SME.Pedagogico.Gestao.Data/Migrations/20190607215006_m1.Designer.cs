// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190607215006_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "59333718-6260-4a52-982e-db2614175383",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "5f464476-fdb0-4720-ac00-e1ab6c6ceb06",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "2676081d-24c5-4d8f-a83b-0283cac2078e",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("studentNameEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "73fa60eb-b144-4ae7-bf7f-d78faa024822",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "fff1dc49-eab7-4aac-bdc2-3a0fbba2fc73",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "e13741b9-205f-4f82-ba2a-9831e6e24bf0",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "010c950e-6ce2-431f-8836-01f479fa5ece",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "68dd550c-f2b5-4597-b556-e12e0a388156",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "23f2173b-ca84-43f0-9720-1841720bc0e4",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "404f2b94-466a-443b-b532-0b41adf65a97",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "a08fbe22-e542-42cf-a5e9-93b803f6d987",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "3d58ec84-0fd5-44e1-9f9d-25953e82d789",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "3daec31e-ff99-4353-8b42-4118eb722b66",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "893b5c17-3800-463a-9004-0c64591a071a",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "89b8f482-8e82-4056-bed5-dd64e1cc7845",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "b1778549-a108-4924-bb3e-5d0459951d4d",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "4c17dfa3-ae81-417e-9ac7-46e060dc5e5b",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "1e68d501-dbf9-49c7-8bac-5fbc7b40db1f",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "d5f54233-1f1c-488a-a980-96ec62b0e42b",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "916ed768-ec50-44c6-9a35-26f18a3d478a",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "1087d3ab-27c2-40ae-bf9e-f023fc89bd43",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "0b3d9a0e-2c5d-4747-9739-85d0f094f084",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "0c888183-27cd-476d-b955-c5bb99a8e186",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "be663671-7f6a-45f8-9100-1860fa0b14ca",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "6907aa64-5244-40a2-9d9c-800be165c646",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "ed7530e9-d1a2-4a18-b0bd-a2d014bf81bc",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "d7814af6-f059-4cbf-9f99-8c9c59e0ec20",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "7200c4e5-7f44-47ca-a0f7-9a3906ebaca1",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "253e9f90-3454-446f-8881-8596a640d41f",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "99fb1d80-6a4e-4471-8fe1-d68db99f2f6c",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "464a6d3e-1b93-4e5a-92ba-08eea4183956",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "2d892da4-77be-42ae-89c1-ad2202753516",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "de06fa79-be6a-4817-98b6-a7f96ac6e118",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "f2aeeec6-e67b-4ea3-98aa-eed3fac5b406",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "4d465999-3f16-4cce-8a94-a04ba0d7f18d",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "2deb8727-1aa8-4e23-bf48-1de4b4674466",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "9f41a5c4-df7e-4e62-b332-e62f3e6119a3",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "ae165d8f-c140-48a3-91dd-f6cc9bb2dbce",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "9aaf8310-30d3-457c-83fb-c3a5d5a527f3",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "68415955-9d14-4a81-97fe-5cfb4240492d",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "001029b2-2fff-4608-9de2-a422f5d6d35f",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "b71e655c-462d-4e4d-b816-8b230b69e470",
                            Login = "caique.amcom",
                            Name = "Caique Latorre",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "7f6a4331-47c0-492a-9d1c-869269292364",
                            Login = "massato.amcom",
                            Name = "Massato Kanno",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "32230790-e7bf-4ea5-b8b5-fc7e847f3f71",
                            Login = "daniel.amcom",
                            Name = "Daniel Matsumoto",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "08e10979-4831-4077-b396-2888795a01c5",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "16ec9cdc-9d59-45f0-a12c-6d4b10f55e4f",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "fcdfb1a6-b4d9-4a89-8155-2825afd4b258",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "6b302d27-adaa-41ab-b8a1-e533cb936691",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        },
                        new
                        {
                            Id = "e6ed4a14-78fe-4b1d-9634-70a24ed6f652",
                            Login = "heloisa.sme",
                            Name = "Heloisa Giannichi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "163664fa-a153-4dfa-ac1b-a2bd142f6aab",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "17f872d9-0227-48a3-9834-98e84a3f263c",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "93eeba4f-47c8-4f17-8b6e-889f2eb084a1",
                            Name = "CP"
                        },
                        new
                        {
                            Id = "a00b9267-0d5b-4fb1-8717-5d5fbf42d692",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "fef8c1b5-0904-4768-bc96-2cf654d2e700",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "237a58ec-4972-487f-b795-27cfa1fe0514",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "12de7e0e-58b4-486d-916b-ccc1e260c126",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "4c38b93b-5ddc-4b0a-a30c-f29a5e81c066",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "dc389b6b-9840-49db-927e-a3cb0b05474f",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
