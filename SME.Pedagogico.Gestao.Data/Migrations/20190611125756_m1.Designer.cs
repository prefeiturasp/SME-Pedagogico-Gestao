// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190611125756_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<string>("AlunoNome");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "bfddb4c6-11ba-4d12-aef4-db3ee54892c3",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "9c2c7097-085b-4aeb-840c-0ff03700b6a2",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "b5263b39-cb92-40d6-9652-561d2741a628",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("studentNameEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "f69ff504-eccd-4ada-ab6c-984f3471a1a8",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "9a4e82c7-55ea-4870-ad9b-114263340625",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "1af773f0-2283-4821-9ec2-17b6ec68ec52",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "a824fb09-9c07-411c-8f56-d4398425529e",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "b8107ed3-8a1b-4cf7-a6b1-2faeacd528ab",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "66f62eb7-d34d-4713-94e2-0832290c9dc8",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "7256b89e-8099-4b34-ad03-52132b9b55da",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "73db66cd-3cfc-4659-833b-de34864c30cf",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "90d458a2-c3ad-465f-a6e8-a09a0410e5ce",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "7609fe6d-29e7-4819-ac72-c128d4abe14a",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "603fbe92-2007-43b7-a637-fd9267ad34fd",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "fec0b133-9ef4-45b0-a553-6880d4016161",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "3ec7a8c7-c7f2-45fa-8fb1-3ee110a8780c",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "982cf815-98a4-48d6-b92c-6ab8a9cf8cbf",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "799c1914-b2f7-4561-8d25-dff05296ce29",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "db34e2aa-9188-4b1b-928c-a910a425bcde",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "33de9351-052b-4aa5-bd36-b5c90245a242",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "6de5f13c-7df3-49a2-88fa-536c3c3ed151",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "cfb7bcd5-310d-4ab9-8363-2c050c9999c6",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "2186f7e6-b86d-48bf-a7d7-f7e21e99d10b",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "28b3e66c-fed5-464c-b312-2d8e14ac900d",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "ed962104-2fbb-4841-b079-124e30699b01",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "2d95ac3a-3e40-4534-8f3c-a3db51a9edd5",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "3d69f7cb-25f3-43ed-9688-64d00a181626",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "19586946-2c11-44cf-8631-c030dde79043",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "71aaad5d-f2f5-4cb6-90a2-7487362a87ca",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "fb121ef7-c482-4bf4-bcf6-05b2e71b4451",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "b47fcd4c-61a5-47b9-ba49-baed26235397",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "51d0ab4c-5581-4407-be5d-37d77250eed3",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "3265da3b-4da4-46cc-b9ba-b9ac6892a5ae",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "a817f351-4469-459a-8603-7fdec2cbf77a",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "510d1f5f-0ac7-489f-b766-1af004dcc13e",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "dcc07f16-d2ab-49aa-8713-2f7bfecac6f3",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "a4a21585-29cb-4e20-a475-4cc666d1d308",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "d997d4f5-eb43-4847-be2c-785f1f533a57",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "c602bee1-9ba4-46a3-85b2-ed0b65a25427",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "82450ca5-86f3-4a0f-9349-8018e9daec9c",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "438b754c-b1a5-4e6c-a454-3505ff356b5a",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "628fa649-81d5-4a74-95c4-88a73b7487e7",
                            Login = "caique.amcom",
                            Name = "Caique Latorre",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "01328094-5aff-4754-bb8d-d6ce6c441ea3",
                            Login = "massato.amcom",
                            Name = "Massato Kanno",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "14031cc0-4990-4898-a5cf-028b7c61e424",
                            Login = "daniel.amcom",
                            Name = "Daniel Matsumoto",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "4894c7f6-7aa6-49d8-a3c4-85a2412ec820",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "05c2f500-3bdf-4b5c-aceb-fc20ffe43341",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "06529eb7-51a4-47cc-a3be-20e8d229af9d",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "267b15b0-4237-4221-ad3f-9fa50c47305b",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        },
                        new
                        {
                            Id = "ef03e4fa-8b1d-4c66-b068-2171adf51c6b",
                            Login = "heloisa.sme",
                            Name = "Heloisa Giannichi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "734ea2b6-64fd-48da-95ec-8e213bea9700",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "ba2e707f-1a51-4e51-bb9e-d8dc692ba141",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "b0683cc1-a11a-4044-ba57-013596c85774",
                            Name = "CP"
                        },
                        new
                        {
                            Id = "a3396943-6583-44c5-b76d-3b1a13b703d9",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "278c6817-d81a-41ec-ae5e-92d3e8163734",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "76da7304-1da5-4e45-b734-a02ff7f9c306",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "2e4cd452-cd71-4643-857d-98255a71ae7d",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "b567b36f-d7f2-4777-8a70-054039ff048f",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "d28de329-4882-48a2-bca9-e484943728f0",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
