// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190604132123_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "1b83bfcd-ec75-4afd-9cd8-c89bb9c5f046",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "91423577-5424-474a-bd26-7baad2aa5af0",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "d9919d53-9648-4e63-9e30-274fa06b9ff8",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "f553d07a-e59b-4965-9248-9772f3b1346a",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "bae560c2-4b87-483d-ba6d-51b08ac1f5ae",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "715c78cf-703a-4a43-aa6e-9e7d76df6cdd",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "621909e8-1a3a-4314-a5f8-05480aa0bd50",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "f9e6e967-b427-4ba6-aff8-2bb293200817",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "924bfaf1-7a74-4b62-a213-e2fa95d6340c",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "9533d7f5-578e-40cb-a586-c18759900c0f",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "40b36473-c565-4104-a7ac-50b1ef6f0a6b",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "bebbbe06-6be1-4fe0-9efa-bbbddb795d2f",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "5c5226c8-de20-4168-8bee-7f06b0a25c2f",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "f50b51eb-2b82-4c52-94cf-15df392ebb69",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "02ffa9af-ac1d-49c1-87e1-516b25f881be",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "48f26794-29fc-4e48-8749-2055701b1a95",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "e80ef2b6-185d-42bc-b0ac-76c479220b3b",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "f274242b-4f2b-4f90-a6ba-d8b99455b3ae",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "f37b9bcd-c925-43af-80a6-a6f8d2233986",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "9bda6345-c010-4d7c-8415-4408289f0178",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "65414688-10fa-4b61-8885-b21b0e461326",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "500adc88-dfe6-4266-be22-a26d70e54f14",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "cf41a231-6628-4beb-bf0f-b334c5ed62b4",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "9aa724a7-9474-45a3-874e-9041eb1907c5",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "02a16981-4e97-4a96-843a-b59a4a27ee53",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "595167fb-da76-4141-ab95-b02e9ecf8e25",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "2f57b6b5-6529-4135-9768-8cf87ed8afbb",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "2c86683b-d979-4e5a-bf85-b31139b914b1",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "6ff4a880-2245-40bf-a0ed-e0ab5f6fa273",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "4da8e8c8-3599-4b26-b197-6a4d6efc201d",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "76a21080-1429-4528-87a6-1d91a70ee4da",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "7f56af21-768e-4535-99f4-19691b30852e",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "d17ea8f0-3224-4d77-bce4-1558a05698a4",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "e557731b-d512-4c4f-8e7f-4cc0cc535735",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "f0cb51ca-f14f-4712-8e0f-545fb946052c",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "c4b33d2a-67d4-4e57-8c86-c29f86ea3d20",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "5588ebce-6f2f-4803-bee2-4cc530d67bfe",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "b77ffe5e-74aa-4fc9-aa46-624942cced9b",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "0425e706-39e6-4e44-a86f-64aa8b6290a1",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "42b82f33-911f-4135-891e-d1b5522c39f9",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "0105334a-c022-4d7e-9b01-275ff1ffd3bb",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "6742084e-456c-4151-9ef5-8ded40635107",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "b7e7c449-ef59-438c-b723-032b810dfdb5",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "f2665cad-acea-4093-8352-a7447b518393",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "bb221f17-49c4-42a4-bb4d-37143b73b4ef",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        },
                        new
                        {
                            Id = "cee0cf4d-f189-4455-a9b1-4039c0e72ce0",
                            Login = "heloisa.sme",
                            Name = "Heloisa Giannichi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ad9c1bec-602a-459c-a3f6-a07b867eb0c4",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "e38252f9-d14c-4dde-9db8-26aaf9b33e6d",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "c6810567-c5ad-499a-9f9a-9073ffbad98b",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "1d018158-2997-4ee8-9f4d-796b9c96ed1b",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "008230bd-7e17-4d09-8907-a9d3069bd565",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "d746513e-d6a9-499e-b8d8-6f2a31d59395",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "3861bf74-4c47-45d0-937d-df768cb27e33",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "9e2fb127-ba2b-4277-8b86-f60c2c68ee74",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "093492c2-af51-4e03-8c39-cf97d82f0341",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
