// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190529123852_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "80f00b0a-83ef-43ed-992d-d347a623530a",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "fb7169be-c342-47a4-8aff-381fbfe8360c",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "ace13700-f61f-48a2-a0e3-4ed24ce75187",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "3bd1f7d4-7dfd-476d-9436-9c5961f64671",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "ae173a7e-7889-4b98-99be-8ca314fb222e",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "1c0773fc-ae0a-44c2-8399-b87dbc946bd7",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "4d19f725-cce9-4510-941d-f1a9168ec710",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "6d3cf3d8-ecc3-47dc-b896-1b1ff3df10c8",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "0b580b7c-45d7-45c9-b4a4-6f13607b690d",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "3a42190f-a7fd-47bd-b019-2228edce0d8b",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "579127fa-5403-437b-a2c2-eee9fefcc821",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "660c20a1-7334-41b5-b4c3-7686e5f89acf",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "36eca0d8-cde9-4732-9d56-e936be526f55",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "72530dbe-f96a-420b-9cf9-e61eb95aaf56",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "053be69a-2d8d-4a00-8381-244017ed9481",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "e46fec96-56d6-49dd-b592-68c01c7f1479",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "5e59b7d2-eb7a-4c6d-9a3e-69e86a59882e",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "c6901a8b-0bd6-4330-b3ac-0272d84d453e",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "b6da64a5-577e-4c59-b9b2-4aa37960417d",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "5f4a869d-b853-4b43-b634-a7960d4ce7f7",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "ae5bcc88-e0f0-4ffd-a9b4-1c1e6c2349b4",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "50a0e80d-9d5b-4713-835f-09a56248b44a",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "fe434680-fe03-41c7-acb9-8f511746b41a",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "36ed87ac-4275-42f2-a75b-5fa547b70753",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "0a8b3595-6f6b-4d6e-81e4-f1826d3da37e",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "6302fdfc-0c6c-4f7e-945b-1d4c8fff736e",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "3286b28d-fb7f-471c-af62-8ed1adc5d874",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "3b49f06b-5556-41fb-8ff0-3ca1bacb5cad",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "5995f4c5-778f-47bc-8654-213bccf3dc31",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "ec0c56c7-712a-47c1-b7e1-39b63147496f",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "a697365a-f498-4037-b540-9995354a0bef",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "b0d9d4ba-1049-48c3-9a02-d3cd47af8376",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "da4907bf-a429-4969-83c2-3fa98ca16471",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "2678c42a-51ea-4e8e-beb8-87c0f2b83cec",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "77e78b7b-1937-4ac7-a00d-19aaf16676f7",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "7ddd662b-5328-453c-8e4a-cba428a90e5c",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "2600cd95-c905-4f4d-94c4-157d19dacd56",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "cfade1fe-ad27-4616-8799-63ddb0fb1943",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "88043d28-597f-4c12-88ec-8b6c8875103f",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "e885f644-1560-41a8-a540-18d6c7c15c8f",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "b2099da5-6f64-42c0-91da-3db5d7b130a8",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "1dc87b6e-3ff6-4b03-8e42-061707539d6e",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "b2dbf20f-0b1e-4b7e-8bbf-1a198aff59d4",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "22187201-7faa-4697-9810-57caf3f32b4a",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "8f22a0a4-cc43-4325-acf3-40f0adfe5aa4",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "43e19740-b0f6-4131-9294-5e35e79a34b9",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "5cdf9d7c-00f4-40ad-899e-226028b1ebaa",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "cfa2d04f-c164-4ecb-aef0-6c4fbfe6145d",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "8b95062f-357b-4a28-b542-a77d5111e867",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "33ca495d-43d9-4fba-bf9f-466fc886bb11",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
