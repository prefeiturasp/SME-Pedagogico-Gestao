// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    partial class SMEManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "e7456bbe-2afa-491a-8ebc-b3fc56bdeb00",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "81773c9b-dabe-4ede-b250-53697d30b477",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "0f84a904-7813-4d8f-bddc-8cfec04e1a81",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("studentNameEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "28591d04-5461-41a4-8b21-0e66990d4956",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "d372ecc2-cc3d-4c8f-88ea-461d8ff75421",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "baecaf1a-f84c-4fcd-8e4d-9b22700d13cf",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "063b2980-0b81-47c7-9133-5789b7f30783",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "afd51ce9-db7b-445f-9d32-4fb6d7891a22",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "32773c99-1dd3-4e65-8583-f7ca3e570a17",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "c4040617-f834-495f-87ea-2eef9412fa84",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "a9a156b2-8de7-47d8-aece-6bd7cebf42fb",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "70467fe6-27a5-4f4a-b6f1-637d1c6ec0ac",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "354a54b8-64d7-4ecf-b12a-ad2aeddf6423",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "c1a3c524-ff4d-4ad3-9682-01e7c17486e9",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "658a8829-7ff8-4440-a90d-0aa5fd775d24",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "2c4ff8ab-b291-4493-83f3-55afd2bd8154",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "8457fd19-34d6-4958-8698-e397c1b19afe",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "54d0f13e-265a-46c1-8cba-7162bfc7acf7",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "63be6799-5907-41dc-a65e-28e82a5712e5",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "f3c54929-5874-4486-9726-7f9f62e6fa17",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "5f192a0e-aa27-4afa-8582-e22a319f0eb2",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "c54c3605-7b8f-429d-87b4-7990b325200e",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "60f143d9-9d2f-47d7-8c4c-1773f71ffb46",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "bb03b1a0-ba78-4426-aa35-ff9a3e7b4c21",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "c8041cfb-5f54-4d67-81d5-b34426fabc9d",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "a5a2f712-e28c-4812-ae1f-34afef8e6d86",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "9d724456-3d5a-4f01-ad65-73996e07d03e",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "b43b318c-5ea1-4787-baf2-7e70dd708f05",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "850a8157-d085-47fe-b18c-af969196e97c",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "f0f51a65-df02-4160-9f3a-6e0eaddca67b",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "96d868d1-c99a-45a8-af0a-10aad286bb71",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "45374348-cc80-49ed-be5c-0367520d502f",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "c45b67e5-b162-4317-8994-57025c82dfbe",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "b27fd829-17ec-434c-8985-0e65e28dc56c",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "28149695-c010-45c6-9dc9-254d620b694d",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "da472a62-fcd0-4ba1-bfdc-98068ffc2fba",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "512c780b-dabb-457b-af68-f7344436aca4",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "6c272a60-872b-4b0b-a72e-d24150718bb0",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "23b1257c-4af2-4a29-955c-711576119c76",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "3584943c-d39e-475c-b467-7e23f154c35a",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "354e6cd2-fbe3-44a2-bea5-6ff34842e35e",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "60631a26-21d3-47b6-a419-47122f9ad991",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "c3a63424-2520-40d5-8500-ecd44f7bdab3",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "8a23e937-d9a8-4a6a-b440-e506893ae071",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "b6798c69-59a5-4a5f-acde-c1e095a1b1f4",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        },
                        new
                        {
                            Id = "a4a9c0dd-b39a-49f2-8067-fa36da395409",
                            Login = "heloisa.sme",
                            Name = "Heloisa Giannichi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "9b17e14c-8d4a-46e0-b7f2-df563c4e3556",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "2ac0e6d3-249d-4513-b82c-d9b23c7ef965",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "1566ded4-c821-438d-92bc-383e71be5c27",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "483f23bb-df73-4117-ae65-2131829fcda0",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "3138a26e-b2c7-4f61-9b65-94e68dc0db0d",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "92407b2e-2659-4581-b917-62353947d87b",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "82b83235-0e87-4c11-a44d-3225f73cd391",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "d0d92491-15e6-4842-8ef3-e86871cd175e",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "75b07d68-13c7-46b1-be12-61c5df581eaa",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
