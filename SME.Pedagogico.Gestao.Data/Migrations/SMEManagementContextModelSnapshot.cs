// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    partial class SMEManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "ad4cab23-3a6d-4be4-b1d6-02129734b2dc",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "df8f9ee1-aacf-4c00-aa26-ded9c9bcc7c0",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "cd29da51-7898-424f-a4fd-fd4dc174b4c1",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("studentNameEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "617bd3c5-3b6b-427b-8d1a-2533e397ad25",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "4d77bfc7-00a5-419d-886b-07ff477db986",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "25055f25-2c76-4db5-8043-c4898ca88978",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "ac2ffa47-573b-4cfe-8e1f-718116845419",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "faeb5578-7f41-4343-b33a-1813bae9817a",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "ef75a415-5447-4fb2-bef7-68c3e5503e56",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "c572b213-860f-46e5-877b-9fce31b955d6",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "6312ac44-5a03-46da-9f33-99b399496258",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "14238940-145b-42ba-a286-020fe9be301e",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "a49ba111-40f8-4405-9c54-c61dc67941c7",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "7d3b94d2-8130-44af-bd21-5ffa1863d806",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "3435a01a-9aad-41db-8149-10ae88a7bdee",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "f433fb27-687a-4262-9f75-89c9426e0015",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "e4fa99ae-bfd5-40b7-a0f5-6da83c16bc8d",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "9e00c102-12bd-4fd0-8073-d125950bd047",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "f1ee9a2d-9105-46a6-913f-7f2f1f1a4546",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "a2af3233-48d2-4768-910b-2a0c2aac958f",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "f9bd0f55-62ca-4091-aec6-73a54070566e",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "75a29786-f6b0-4532-9a4f-40c9d5412087",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "cc3f3146-5a0f-4422-8e1b-bdf4a2e2595d",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "12909153-9abb-4a57-83e0-75bb593fc20a",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "18c703fc-ffb3-419c-83fd-5025f4d1d382",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "a2e8059c-b1d9-4407-8f7f-c6db3cc9e583",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "a5252d17-d595-4299-b05a-f7b827795e9d",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "e9b9e726-ab21-4f44-b458-bb7f0c15a280",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "ad94d4d4-f620-4b42-873d-386171f5b8f9",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "ed24c85b-3255-4f33-80e2-69d2a36291f2",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "e4752603-7da8-4820-a372-1a14146e858d",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "9b116582-9496-459b-8682-840cbcfdf604",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "d044dce4-252f-4a3f-9243-db087d00148c",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "720d691e-9be4-45bc-8c3c-f1436cc206fa",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "58dbc0f4-ac8a-4929-b5c0-3d2610e29fe1",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "a01babe8-4521-4db7-bdad-95380ae0f2e7",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "29790d27-8434-453f-9b43-aecde604cc54",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "a0f7b373-f9bc-4dfa-997c-206ad3027be5",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "1ac69348-a160-4d27-9148-7f860b96978b",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "205e595a-ddb6-4667-94c8-93043e8c76bf",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "4a57f74f-cd44-4cb7-872b-5f528e76d626",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "4d15431c-caff-45a3-9b47-7c7eb4c36804",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "49097d73-9ac8-462f-bcf1-daf0ff085c93",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "22e75ea1-8105-4a8b-a695-cb4375b50a6d",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "49575b83-ba7d-4492-b40e-b12c19500157",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "71108533-2053-4f34-b76f-b089639b126b",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "34d3939a-d20b-4d83-b6d0-f057bb72317c",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "3274ca6c-5131-4aa4-9c61-e181e521c696",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "dcee6c8a-c877-42bd-8674-144382d8de63",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "7efcb632-c09a-460d-b4d7-21f10f7c3d9d",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "dcf61675-721d-4546-a5a4-220be95bef07",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "c5695173-9626-450e-b44c-1e8026aca88d",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "bbadcdda-e941-45ba-b284-8601a77bf0fe",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "8b3e912b-58f7-40c7-a92a-c9626165e642",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
