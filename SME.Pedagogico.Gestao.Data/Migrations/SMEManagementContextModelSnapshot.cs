// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    partial class SMEManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "65e51681-7b5d-41fd-b273-38d2f8608d80",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "129fddcb-e034-4281-a883-b458f5f460f4",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "db696972-476f-4c94-8111-9dfc802473ee",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "a1349d54-4ff7-4501-a7fe-a7aef06082eb",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "d260e23f-05ff-4504-82c4-9f4083998acc",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "3111466b-37d1-45fa-88e7-ab8dbb97fdf2",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "c0a888ac-0dbf-418e-8856-e82862a49e2c",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "5ed5858b-4552-4659-a0d9-b957e7d2fc74",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "b11180eb-6891-44da-a1d6-842af8e0d5af",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "f4ecc4c0-b2ee-4635-bec0-6b2f85020f66",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "090d01ca-0e62-4ccb-a196-b5343568a4ed",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "fbd90918-f722-4a6a-b5ca-85c9ed32f62e",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "fc220044-40b9-4304-a4d7-76d94f9df76a",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "dbc179fc-429d-494e-ba5a-7445508d391e",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "eb000636-7fa0-4282-8d9e-b53907629d70",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "e75e4781-c3c7-42ff-b6e4-dcb094d0b408",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "84247726-b860-4eaa-9085-f2bade667773",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "08bfba36-82ae-45e0-bf2d-dc26a0439daf",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "107cee38-af45-4ab3-a0aa-9202bc1e4d9d",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "c1be46fc-cf03-4564-a27e-704f55a896c0",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "c15e8724-8a99-4532-9bf6-83ddde6c3c51",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "e61ba98c-6035-42bb-b59f-3cd8595befec",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "913e38c8-5b0c-4bf5-8df8-1d2ecc2599ee",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "853e76cc-13f7-4443-8df7-14014c28eb57",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "4822300d-8530-41c0-98b0-e1675f6f0ee7",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "5ca3850a-640a-4b9b-b048-49a965e30567",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "f81fcb55-4e45-45a0-9076-cc06c3788c34",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "c54fc706-18e5-41f7-9eea-8368dcd05b9a",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "550d95f4-5ec1-4a31-ad15-b485011fc08a",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "d523a817-4225-4982-a701-d0bdcdd96448",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "6b162dad-548e-4b42-92b2-1cc88b307098",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "bf7f2f44-9e8b-4def-9476-f71c0fa55ae3",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "0f499016-c18f-41c3-8fc6-9bc28c806900",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "4dcb64e2-4e8c-4b14-ab5a-0ac53b4bc846",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "48909849-80cf-4632-96c2-ea21cdadb757",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "03878382-8b6e-49a1-8220-71b49f71c2cd",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "092596f8-7bb0-46e0-8fb2-96b22467966e",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "2268d1df-394f-4371-a414-9077d55f41bd",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "60725cae-430c-467c-8cc7-01a55ba9f38d",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "c6adeade-17b2-4148-bf32-1164ed8fd106",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "af3883f5-df4c-4ce5-aeff-5f4dc074e881",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "9c496c5d-9f5e-43f7-9349-16f2703e58aa",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "da9647ba-36fc-4075-9fad-ee741e0c25ac",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "575a4d13-9765-46a9-8129-18bf5be80693",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "3615baf1-8ea0-473a-843b-764b3270ebca",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "91182f29-dba7-4a31-9caf-68fb89fcf36a",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "a846f46e-1383-4268-a194-f63ad91e34c6",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "ae1f7cfe-52e8-4474-bbfd-cc12a1512219",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "0ccb5f2f-8dad-4e95-8d12-1fc3e53cf95a",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "43c3e7b9-651d-44f1-a9d5-7448c06f3b25",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "f653ebe3-9fbd-4b33-9700-77e2c16a5f6f",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "1b7bfe68-4cff-4d24-a54f-2b1fb185ed9e",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "de6cb4ff-f82c-4396-8f6e-c4377a5919b6",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "fdead5ff-9da1-4b11-9692-b36698786906",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
