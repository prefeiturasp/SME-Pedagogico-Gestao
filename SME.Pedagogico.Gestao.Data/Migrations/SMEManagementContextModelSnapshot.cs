// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    partial class SMEManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("Semestre");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("Semestre");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "f989b5f0-4dbd-45c8-9ac1-96ab8585648c",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "fee26dd4-c481-4103-817c-703e179cfd93",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "d13f8724-60aa-499c-94c7-ef7501ccc6dc",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "4b27fd89-8333-4e22-9c81-8015b83da742",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "be778720-bfe3-4208-b3ac-f40c21ba9157",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "576512d2-fd02-4c73-828d-6374a2e2775a",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "d59960b4-db4a-40ce-9ffd-878971e3d6a9",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "ad170b32-37d5-4358-8cc3-08bc2209f3c4",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "82f063c8-e036-49d6-a0ea-59d75f87fd72",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "1da65244-bd4a-4e64-bf6b-ee0d1b9b17a0",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "3018605f-c043-4645-8727-2d3961ef9020",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "036a1361-0d56-4304-a022-fb297c6671c8",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "eaa665fc-f7f6-4d52-a93e-21d85882e9fa",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "d69985e7-0b0f-4743-9f4d-1e5dde7d0bbf",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "b07b0702-774f-4a0b-bd91-1f69fd77d26e",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "6158e51f-17be-4bba-a405-330488cfdece",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "9ba21ae8-b2a8-4628-8873-be3c455509ba",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "dd230b33-4481-4ae5-ac88-abca4e33c74c",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "a2c7288a-fab1-43d4-9a51-06ffe32055bc",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "d9889e84-7bc5-4223-80f8-371e5cd7d963",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "2b01b385-c066-4eda-9eb0-100d618bb737",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "a47a5251-329f-49cd-a3ff-3488fc0c0f83",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "574d42e7-7081-4249-9020-e1cb9f6ba99e",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "45e1a528-2e5a-44f6-9704-08e7874d41bd",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "d1a04320-877d-4d58-ae8f-df9cd77a9cb9",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "c2acfcc5-258d-420b-809f-c37519c10fea",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "34045bfc-d6f2-4a60-a8b6-aa9acf165d49",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "784e2512-55f9-4936-8079-4857e5b5bdb0",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "fa3a8972-2637-46e7-b58d-40b46baedf74",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "ff34ad37-cb11-4108-b2ff-bc897c29240f",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "9bb7096d-6aee-4dab-b782-12f3416f23e0",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "fa63cb79-da07-4fc5-a3af-7b2d3deccd83",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "34de6f4e-a8dc-4150-a594-0be93498b798",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "1f19b322-1c22-4e1f-a421-d86c9ee515ab",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "e99c0dca-0129-409a-9ff5-5fc2e7a5ee3b",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "d18312ba-f12f-4597-9507-1eeff516d7c3",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "7c5eab84-8579-4a73-9b9b-5efd5e216cd7",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "4b77a22d-be92-42be-a757-9bd13230a333",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "b1e1ea09-dd96-4605-90cc-23706b91082b",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "ae737195-170a-43eb-bb16-671919ec1a25",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "a69738c0-c450-4083-a1b3-9b109f6f4b43",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "2bc04654-9f9a-452a-b33d-19cea5e5aaca",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "e3ac07af-da84-4728-9cbb-85a6d1ad3b7a",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "ba8cbec4-6c8f-41a4-b38e-bbed35aa2e61",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "df9faa4d-db92-444b-8948-62a0e8909838",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "23a04d85-0aea-46da-bfc3-1c935c1f33c4",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "39c9871b-d22e-41ef-827a-d9051a452a05",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "1312aac4-7bb4-4615-bf85-c0beb71d248f",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "525b5faa-e777-4fa7-8d4d-8a44c6f44009",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "e642fc10-a7ff-4222-a978-fe7a993b0652",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "331f539f-1567-4391-a738-6a4df8aa60f7",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "3880de7b-50f8-46ae-abbe-bc52f4dc574f",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "29197201-abc3-4275-9117-d8165ef595e6",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "d0d8f431-b6e3-4152-8e89-364e486067bc",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
