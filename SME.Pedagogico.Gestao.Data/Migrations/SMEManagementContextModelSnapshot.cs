// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    partial class SMEManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "44b4a82f-fd7f-4af0-998b-579228c476b2",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "25314e28-6fec-4136-b532-6d8760e1d5bf",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "f01407f8-6c30-4004-9e3b-c5e483fd948f",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Semester", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = "e660c118-eb98-4dc2-bb8f-c1c9b175fa6b",
                            Value = "1"
                        },
                        new
                        {
                            Id = "1bdfffdc-52b8-4d51-916f-215dd7abc105",
                            Value = "2"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "40c5564d-1161-4eb0-9a03-3d3838d4f612",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "627cf780-12ac-4061-8d52-4ef9c19a211c",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "f1545524-6cd8-40d1-80de-43f8a29f0812",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "b5a54dbe-a987-4cf8-abc5-862cf9ae27bd",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "09eb6a00-a01a-416d-a4bf-1d7a073c1838",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "16ad812b-458d-4fdc-aeb7-2b63f88534ad",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "8056b661-054a-4915-a54e-542b9a39a87c",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "c5abbcee-b49c-4a5d-88a8-1822ae21c0e9",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "a0d90a3d-daac-439d-a010-5ee241ca21c2",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "c94a1157-6337-4048-833e-7634ab119d14",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "209671f4-062c-4212-9880-25c687596f02",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "7f2b4746-aef1-4e38-b18c-d000fffaca06",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "ac58e4ac-3f53-4447-a101-b253361a4ebf",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "44b91af5-b509-4365-b7bb-72508f333cad",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "adc0c949-f6ab-4b61-b612-43a45edae7a1",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "134eb1eb-fe3e-4fa7-b7c5-a58b579845e2",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "c406e11d-1ddf-4504-8be3-2a50f775c88e",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "9a88ba77-2554-4697-abd0-d8b13f641749",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "51b468a5-bc92-40dd-95d6-73eb2c7422a9",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "027237ee-45d8-4c61-b0de-213b8e7ac6f3",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "29822a20-9fe5-42d2-a302-8a7c534417d9",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "b48cd2c5-37c3-403b-8bd8-ba56529080fa",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "246a7c04-f46c-4859-9bc0-c875c0d45322",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "24d1ccf3-456e-41c3-a2dd-aaf0c0d9729a",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "b4d9a395-a460-4a0e-996a-d051d82588fa",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "6167f461-3ef3-480c-8f71-9c14552b9333",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "6948d66e-886a-47f0-ace6-b820a4030109",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "2e22e385-f105-467d-bb3f-8564e3289c0a",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "2773349a-2e2e-4adc-ae50-a69f734c3bec",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "466bdd28-265e-466b-9b5b-7166760b1264",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "3e85d9dc-afa5-4d41-8a35-ccceabfd3fb7",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "e7f7bd1f-da7e-4126-97ab-6fa37778e8a9",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "6e0b3bd2-8345-48df-8bfd-c7a881d7ea51",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "ab764528-209d-4165-bfba-fe9d985e0b40",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "8ea18421-aab8-4a3b-b8d2-0bb4058d7af7",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "4027faa8-6a75-49c8-b3f0-d4b4ce892a72",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "65ef0593-8316-4b9c-905c-e04a891c78be",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "7de1b1ea-0d58-44b1-ab74-b74e2b452cf8",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "4a540cc1-20c2-44a0-8f5e-2ffcf51440d8",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "c3a1db7e-76bf-463b-ab97-2504454ef017",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "d8d006dc-76c8-41b2-b289-0414d334aef7",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "ab986c67-74c0-49db-81fb-09e2d689d18e",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "2a52728b-7623-4c3d-9b4f-fcc9aa70f8ef",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "15391af7-0dde-4891-8e91-1e84ddbdc2f6",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "69533883-a7ea-4b99-ab96-d7725f48fc4f",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "a91e3094-88c9-439a-9769-282a400ad833",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "3308dfc4-e27f-4c29-b5d2-c126b0d0e7ed",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
