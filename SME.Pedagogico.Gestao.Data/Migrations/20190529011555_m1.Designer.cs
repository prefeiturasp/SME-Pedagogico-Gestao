// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SME.Pedagogico.Gestao.Data.Contexts;

namespace SME.Pedagogico.Gestao.Data.Migrations
{
    [DbContext(typeof(SMEManagementContext))]
    [Migration("20190529011555_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem1Ideia");

                    b.Property<string>("Ordem1Resultado");

                    b.Property<string>("Ordem2Ideia");

                    b.Property<string>("Ordem2Resultado");

                    b.Property<string>("Ordem3Ideia");

                    b.Property<string>("Ordem3Resultado");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolCAs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Ordem4Ideia");

                    b.Property<string>("Ordem4Resultado");

                    b.Property<string>("Ordem5Ideia");

                    b.Property<string>("Ordem5Resultado");

                    b.Property<string>("Ordem6Ideia");

                    b.Property<string>("Ordem6Resultado");

                    b.Property<string>("Ordem7Ideia");

                    b.Property<string>("Ordem7Resultado");

                    b.Property<string>("Ordem8Ideia");

                    b.Property<string>("Ordem8Resultado");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TurmaEolCode");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolCMs");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Algarismos");

                    b.Property<string>("AlunoEolCode");

                    b.Property<int>("AnoLetivo");

                    b.Property<int>("AnoTurma");

                    b.Property<string>("DreEolCode");

                    b.Property<string>("EscolaEolCode");

                    b.Property<string>("Familiares");

                    b.Property<string>("NumeroChamada");

                    b.Property<string>("Opacos");

                    b.Property<string>("Processo");

                    b.Property<int>("SemestreCode");

                    b.Property<string>("SemestreId");

                    b.Property<string>("TerminamZero");

                    b.Property<string>("Transparentes");

                    b.Property<string>("TurmaEolCode");

                    b.Property<string>("ZeroIntercalados");

                    b.HasKey("Id");

                    b.HasIndex("SemestreId");

                    b.ToTable("MathPoolNumbers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PollType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PollTypeDescription");

                    b.HasKey("Id");

                    b.ToTable("PollType");

                    b.HasData(
                        new
                        {
                            Id = "7b8dab37-4897-41fc-ae2d-c92119d6b675",
                            PollTypeDescription = "Sondagem de Português"
                        },
                        new
                        {
                            Id = "441c22b6-c627-4a79-a04f-32454cd227c8",
                            PollTypeDescription = "Sondagem de Matemática"
                        },
                        new
                        {
                            Id = "4dcbf25e-0d6c-4ccf-b025-442d13dac07c",
                            PollTypeDescription = "Sondagem de Alfabetização de Matemática"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.PortuguesePoll", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("classroomCodeEol");

                    b.Property<string>("dreCodeEol");

                    b.Property<string>("reading1B");

                    b.Property<string>("reading2B");

                    b.Property<string>("reading3B");

                    b.Property<string>("reading4B");

                    b.Property<string>("schoolCodeEol");

                    b.Property<string>("schoolYear");

                    b.Property<string>("studentCodeEol");

                    b.Property<string>("writing1B");

                    b.Property<string>("writing2B");

                    b.Property<string>("writing3B");

                    b.Property<string>("writing4B");

                    b.Property<string>("yearClassroom");

                    b.HasKey("Id");

                    b.ToTable("PortuguesePolls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Semester", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = "4cb1c00d-0f4f-49d0-8f2f-a67b697af1cc",
                            Value = "1"
                        },
                        new
                        {
                            Id = "4721ed3f-d591-4c06-ae57-cab3edc7eebc",
                            Value = "2"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Student", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("StudentId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.Teacher", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodeId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CodeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCodes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AccessLevels");

                    b.HasData(
                        new
                        {
                            Id = "fd68f013-1d9d-44e5-a817-5b37f71ed690",
                            Description = "Desenvolvedor",
                            Value = "0"
                        },
                        new
                        {
                            Id = "7786a674-fc18-4da8-9965-c02956ba5a98",
                            Description = "COTIC",
                            Value = "1"
                        },
                        new
                        {
                            Id = "1bf1b083-a2ed-433f-b35e-c8a7dfdfc792",
                            Description = "SME",
                            Value = "2"
                        },
                        new
                        {
                            Id = "8db5ba3e-d49a-4f8a-9128-09c52509ff52",
                            Description = "COPED",
                            Value = "3"
                        },
                        new
                        {
                            Id = "9a9895d7-71bd-46c6-a4a9-ce53d20e011e",
                            Description = "DIEFEM",
                            Value = "4"
                        },
                        new
                        {
                            Id = "118d1a8a-f020-40db-b6f5-6b189104136a",
                            Description = "DIEI",
                            Value = "5"
                        },
                        new
                        {
                            Id = "d26ec454-0bfe-41f3-974f-fc8f769d722a",
                            Description = "DIEJA",
                            Value = "6"
                        },
                        new
                        {
                            Id = "46ca96f2-af50-4746-be63-c9c79f523dee",
                            Description = "DIEE",
                            Value = "7"
                        },
                        new
                        {
                            Id = "7a6348e6-3c14-4ecb-9338-7d2126bd11dc",
                            Description = "NTA",
                            Value = "8"
                        },
                        new
                        {
                            Id = "dfbafdad-961f-4f7a-8912-6d688e737b9d",
                            Description = "NTC",
                            Value = "9"
                        },
                        new
                        {
                            Id = "c6162cb9-cf26-4c27-a275-d6f3c5428768",
                            Description = "NTC-NAAPA",
                            Value = "10"
                        },
                        new
                        {
                            Id = "cc5e194a-ce83-4ef6-aff9-f11fa25837ee",
                            Description = "DIEE-Conveniado",
                            Value = "11"
                        },
                        new
                        {
                            Id = "0e58c654-4551-4fee-83b5-faba20e37f41",
                            Description = "COPED Básico",
                            Value = "12"
                        },
                        new
                        {
                            Id = "3ece5641-72ed-46af-a3d0-4d7478f80838",
                            Description = "Regional",
                            Value = "13"
                        },
                        new
                        {
                            Id = "bdd40003-3bf4-495e-bf96-4f31788316eb",
                            Description = "Técnico",
                            Value = "14"
                        },
                        new
                        {
                            Id = "c472462d-9a05-43b9-a5a0-4eecf09c67ad",
                            Description = "Supervisor DRE",
                            Value = "15"
                        },
                        new
                        {
                            Id = "d3143bd9-c3ab-4ac8-850e-a21f05383230",
                            Description = "DIPED",
                            Value = "16"
                        },
                        new
                        {
                            Id = "5649f295-7f77-410c-b4f1-95777e116a84",
                            Description = "NAAPA",
                            Value = "17"
                        },
                        new
                        {
                            Id = "7afd3a8d-9b86-40e3-a1ed-959f03d8c5b0",
                            Description = "CEFAI",
                            Value = "18"
                        },
                        new
                        {
                            Id = "66f51d6d-d1c2-48d7-b1c9-a441229a4bc1",
                            Description = "PAAI",
                            Value = "19"
                        },
                        new
                        {
                            Id = "888c8c29-5771-4475-91f6-f13cec5c40cb",
                            Description = "DIPED DRE",
                            Value = "20"
                        },
                        new
                        {
                            Id = "8fceb54a-fd67-44f1-9bb3-8f776f825215",
                            Description = "Adm DRE",
                            Value = "21"
                        },
                        new
                        {
                            Id = "ba3c4fad-21f1-4e27-b285-239ec8e1b41e",
                            Description = "Básico DRE",
                            Value = "22"
                        },
                        new
                        {
                            Id = "20e076b6-282a-49ec-92b2-2e7d67563d18",
                            Description = "Básico Escola",
                            Value = "23"
                        },
                        new
                        {
                            Id = "f6fad244-5ed8-4537-9907-440845c49956",
                            Description = "Infantil",
                            Value = "24"
                        },
                        new
                        {
                            Id = "1eefc7dc-3437-4e20-bc04-61751ddebca8",
                            Description = "UE Parceira",
                            Value = "25"
                        },
                        new
                        {
                            Id = "c0249ef3-2a97-4d5f-92cf-e20ea276a339",
                            Description = "AD",
                            Value = "26"
                        },
                        new
                        {
                            Id = "19bee4e5-68a6-406d-9f94-a77501ec0135",
                            Description = "CP",
                            Value = "27"
                        },
                        new
                        {
                            Id = "9b29f6ec-c58a-4d2a-9687-85f94840fbeb",
                            Description = "Secretário Escola",
                            Value = "28"
                        },
                        new
                        {
                            Id = "7c3cc57d-2703-4408-a69f-3013ac30d4f1",
                            Description = "COTIC",
                            Value = "29"
                        },
                        new
                        {
                            Id = "5c1fe9ce-ce38-4896-90b3-278ae8acc721",
                            Description = "UE",
                            Value = "30"
                        },
                        new
                        {
                            Id = "7a8c6da8-931e-4bf9-abd9-de26b31f06e3",
                            Description = "CJ E Volante (PEI, ADI)",
                            Value = "31"
                        },
                        new
                        {
                            Id = "e60c724a-6bd3-4c8c-9554-94e9e3cac85f",
                            Description = "Fund. e Inf.",
                            Value = "32"
                        },
                        new
                        {
                            Id = "60204118-bd92-4845-abf0-798a3814fdef",
                            Description = "POA",
                            Value = "33"
                        },
                        new
                        {
                            Id = "0392b063-5db0-4b85-b781-572c8d63110e",
                            Description = "PAP",
                            Value = "34"
                        },
                        new
                        {
                            Id = "cf24d574-2b58-4b6f-aa91-90422ab5bb90",
                            Description = "AEE",
                            Value = "35"
                        },
                        new
                        {
                            Id = "28332e80-fb12-48ba-8f91-93f917cd1da5",
                            Description = "Readaptado",
                            Value = "36"
                        },
                        new
                        {
                            Id = "7ad1e379-6ecf-488d-930e-dc64c124a764",
                            Description = "ATE",
                            Value = "37"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiresAt");

                    b.Property<DateTime>("LastAccess");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Session");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("LoggedUsers");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.PrivilegedAccess", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("OccupationPlace");

                    b.Property<int>("OccupationPlaceCode");

                    b.HasKey("Id");

                    b.ToTable("PrivilegedAccess");

                    b.HasData(
                        new
                        {
                            Id = "139113e3-b90a-4f42-8fd8-bab3a60a76c4",
                            Login = "danielli.amcom",
                            Name = "Danielli",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "87eec126-acd8-46ce-ba9a-6f6eb7e898c0",
                            Login = "jeff.amcom",
                            Name = "Jeff",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "b1fcaa76-deee-4308-b0ec-2a80775d896b",
                            Login = "aline.amcom",
                            Name = "Aline",
                            OccupationPlace = "AMCOM",
                            OccupationPlaceCode = 1
                        },
                        new
                        {
                            Id = "e075775d-9a6b-4d1d-b669-40dc05386a96",
                            Login = "gabi.sme",
                            Name = "Gabi",
                            OccupationPlace = "SME",
                            OccupationPlaceCode = 2
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "2d684d56-ec0c-4e68-8ec2-d5d827a82c75",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = "143ed30f-06e9-4011-9eeb-75da1e0a4d47",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "2e16b83d-d639-4285-9178-b0050fac5321",
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = "5a8eeb43-f98f-4f12-a661-a0df3a1be74d",
                            Name = "Diretor"
                        },
                        new
                        {
                            Id = "164ef8ec-7fb4-4cea-81ea-bb5c2813f80e",
                            Name = "Secretario(a)"
                        },
                        new
                        {
                            Id = "dbd50975-45e3-471b-86be-ddabab2222db",
                            Name = "Auxiliar"
                        },
                        new
                        {
                            Id = "941eb81d-0562-48eb-b65d-5b60d238838b",
                            Name = "Professor"
                        },
                        new
                        {
                            Id = "64d84265-e28c-4173-8df2-6d0767e165ac",
                            Name = "Responsavel"
                        },
                        new
                        {
                            Id = "fb6eabbe-d45a-476b-a9da-1c84f24dfc48",
                            Name = "Aluno"
                        });
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccessLevelId");

                    b.Property<string>("RoleId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AccessLevelId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("StudentId");

                    b.Property<string>("TeacherId");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("TeacherId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.Code", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Codes");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Organization.LogControl", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("ModifiedAt");

                    b.HasKey("Id");

                    b.ToTable("LogControls");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCA", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolCM", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.MathPoolNumber", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Semester", "Semestre")
                        .WithMany()
                        .HasForeignKey("SemestreId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.StudentCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("StudentCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithMany("Codes")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Academic.TeacherCode", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Organization.Code", "Code")
                        .WithMany("TeacherCodes")
                        .HasForeignKey("CodeId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithMany("Codes")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("LoginStatus")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Authentication.LoggedUser", "UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Authentication.UserRole", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.AccessLevel", "AccessLevel")
                        .WithMany("UserRoles")
                        .HasForeignKey("AccessLevelId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SME.Pedagogico.Gestao.Models.Entity.Profile", b =>
                {
                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Student", "Student")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "StudentId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Academic.Teacher", "Teacher")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "TeacherId");

                    b.HasOne("SME.Pedagogico.Gestao.Models.Authentication.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("SME.Pedagogico.Gestao.Models.Entity.Profile", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
